generator client {
  provider     = "prisma-kysely"
  output       = "."
  fileName     = "types.ts"
  enumFileName = "enums.ts"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_URL")
  relationMode = "prisma"
}

enum SubscriptionPlan {
  FREE
  PRO
  BUSINESS
}

model Customer {
  id                     Int               @id @default(autoincrement())
  authUserId             String
  name                   String?
  plan                   SubscriptionPlan?
  stripeCustomerId       String?           @unique
  stripeSubscriptionId   String?           @unique
  stripePriceId          String?
  stripeCurrentPeriodEnd DateTime?
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @default(now())

  @@index([authUserId])
}

model User {
  id               String    @id @default(dbgenerated("gen_random_uuid()"))
  name             String?
  email            String?   @unique
  image            String?
  walletAddress    String    @unique
  hasPandorasKey   Boolean   @default(false)
  createdAt        DateTime  @default(now())
}

model K8sClusterConfig {
  id         Int               @id @default(autoincrement())
  name       String
  location   String
  authUserId String
  plan       SubscriptionPlan? @default(FREE)
  network    String?
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @default(now())
  status     Status?           @default(PENDING)
  delete     Boolean?          @default(false)

  // @@unique([plan, authUserId])
  @@index([authUserId])
}

enum Status {
  PENDING
  CREATING
  INITING
  RUNNING
  STOPPED
  DELETED
}
